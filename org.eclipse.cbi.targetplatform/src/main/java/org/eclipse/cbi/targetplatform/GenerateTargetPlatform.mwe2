module org.eclipse.cbi.GenerateTargetPlatform

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."
var baseName = "org.eclipse.cbi.targetplatform"
var java_source = "src/main/java"
var xtext_source = "src/gen/xtext"

Workflow {
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = baseName
				rootPath = rootPath
				runtime = {
					src = "${rootPath}/${baseName}/${java_source}"
					srcGen = "${rootPath}/${baseName}/${xtext_source}"
				}
				genericIde = {
					src = "${rootPath}/${baseName}.ide/${java_source}"
					srcGen = "${rootPath}/${baseName}.ide/${xtext_source}"
				}
				runtimeTest = {
					enabled = true
					src = "${rootPath}/${baseName}.tests/${java_source}"
					srcGen = "${rootPath}/${baseName}.tests/${xtext_source}"
				}
				eclipsePlugin = {
					enabled = true
					src = "${rootPath}/${baseName}.ui/${java_source}"
					srcGen = "${rootPath}/${baseName}.ui/${xtext_source}"
				}
				eclipsePluginTest = {
					enabled = true
					src = "${rootPath}/${baseName}.ui.tests/${java_source}"
					srcGen = "${rootPath}/${baseName}.ui.tests/${xtext_source}"
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				// lineDelimiter = "\n"
				preferXtendStubs = false
				fileHeader = "/**\n * Copyright (c) 2012-2017 Obeo and others.\n * This program and the accompanying materials\nare made available under the terms of the Eclipse Public License 2.0\nwhich accompanies this distribution, and is available at\nhttps://www.eclipse.org/legal/epl-2.0/\n\nSPDX-License-Identifier: EPL-2.0\n\nContributors:\n\tMikael Barbero - initial implementation\n */"
			}
		}
		language = StandardLanguage {
			name = "org.eclipse.cbi.targetplatform.TargetPlatform"
			fileExtensions = "targetplatform,tpd"
			referencedResource = "platform:/resource/org.eclipse.cbi.targetplatform.model/src/main/resources/TargetPlatform.xcore"
			
			fragment = ecore2xtext.Ecore2XtextValueConverterServiceFragment2 auto-inject {}

			builder = null

			junitSupport = {
				generateStub = false
			}
			formatter = {
				generateStub = true
				generateXtendStub = true
			}
			serializer = {
				generateStub = false
			}
			validator = {
				generateXtendStub = true
				composedCheck = "org.eclipse.xtext.validation.ImportUriValidator"
			}
			scopeProvider = {
				generateStub = false
			}

			generator = null

			contentAssist = {
				generateXtendStub = true
			}
			labelProvider = {
				generateXtendStub = true
			}
			outline = {
				generateXtendStub = true
			}
			quickFixProvider = {
				generateXtendStub = true
			}
		}
	}
}

